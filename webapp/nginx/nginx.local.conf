user  nginx;
worker_processes  auto;

events {
    worker_connections  1024; 
    }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout  65;

  # アップストリーム（同一ネットワーク内なので ports: 不要）
  upstream fe { 
    server frontend:3000; 
  }
  upstream be { 
    server backend:8080; 
  }
  upstream jaeger {
    server jaeger:16686;
  }

  # JSON形式でログを出力(変更)
  log_format json escape=json '{'
      '"time":"$time_iso8601",'
      '"host":"$remote_addr",'
      '"port":"$remote_port",'
      '"method":"$request_method",'
      '"uri":"$request_uri",'
      '"status":$status,'
      '"body_bytes":$body_bytes_sent,'
      '"referer":"$http_referer",'
      '"ua":"$http_user_agent",'
      '"request_time":$request_time,'
      '"response_time":$upstream_response_time'
    '}';
    access_log /var/log/nginx/access.log json;
    # ここまで

  server {
    listen 80;

    # ヘルスチェック
    location = /health-check { 
        return 200 "ok\n";
        add_header Content-Type text/plain;
        }

    # APIはバックエンドへ
    location /api/ {
      proxy_pass         http://be;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location /jaeger/ {
      proxy_pass         http://jaeger;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
    }

    # それ以外はフロントへ
    location / {
      proxy_pass         http://fe;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection "upgrade";
    }

  }
}